8.1 Relationship between javaScript and HTML: why do we need js?
```````````````````````````````````````````````````````````````````
    - HTML defines the structure of a web page.
    - CSS provides the style/lok of the HTML page.
    - javaScript adds interactivity to the HTML page.

8.2 How do we add Js into our HTML
```````````````````````````````````
    - Including javaScript code inline
        - Example :
            <body>
                <button onClick="alert('Et tech academy")">Click Me</button>
            </body>

    - Embedding the javaScript code in your HTML (on File)
        - Example :
            <script>
                function someFunction (){
                    alert('Et tech academy');
                }
                someFunction();
            </script>

    - Including an external javaScript file in HTML (Recommended)
        - Example :
            1. At the bottom of the html page, right before the closing body tag
                <script src="script.js"></script>

            2. Inside the head tag using "defer" attribute
                <head>
                    <script src="script.js" defer> </script>
                </head>

            3. Inside the head tag using "async" attribute
                <head>
                    <script src="script.js" async></script>
                </head>

8.3 understand Dom : how do HTML and javaScript work together?

    - What is Dom (Document object Model) :
        - Dom is a structure of standard that allow javaScript to access, modify and update the structure of html page or element
        - The Dom is a logical tree-like model/representation of out html.
        - Dom represents the html page using a series of object

    - Why do we need to understand Dom
        - Dom allows us to select and update element when user interacts with a website.
            Selecting Dom element :
                - It simply means locating the element you want to work with
            
            updating Dom element :
                - It means interacting with the element, the text of the element, the attributes of the element or with tis child element.

8.4 The Dom tree

    - Definition :
        - When the browser reads html code and encounters an html element, html attribute or text in html, it converted
         each one of them into objects.
        
        - Object created by the browser are called node.

        - The browser will treat node object as a tree-link hierarchy. (Dom tree)

    - Dom node (NodeList) vs Dom element (HTML collection)
        - Dom node is represents everything - element, text, comments and more.

        - Dom element represents - html element.

8.5 Dom Manipulating: introduction 

    - Manipulating Dom involves three steps
        1: Finding/Selecting the element we want to work with - accessing.
        
        2: Altering/Updating the text or attributes of that element - modifying

        3: Event/Action listening - determining when

8.6 Dom Manipulation: Selecting element (part 1)

    - Selecting element definition :
        - Means finding an element that we plan to manipulate or apply a change from the Dom.

    - Selecting in javaScript can also be divided into three types

        1: Select an individual element
        2: Select multiple element
        3: Traversing between multiple element

    - How to select individual element

        1. getElementById() method
            - Example :
                - document.getElementById('one');

8.9 Selecting element (traversing between multiple element)

    Definition of traversing between multiple element
        - Selecting an element from another/neighboring element.

    Common selecting method by traversing between element
        1: firstElementChild - returns the first child element of hte specified element
            - Example:
                consol.log(document.getElementById("numberList").firstElementChild)

        2: lastElementChild - returns last child element of the specific element
            - Example:
                consol.log(document.getElementById("numberList").lastElementChild)

        3: parentElement - returns the parent element of the specified element.
            - Example:
                consol.log(document.getElementById("numberList").parentElementChild)

        4: PreviousElementSibling - returns the previous element of the specific element, in the same tree level
            - Example:
                consol.log(document.getElementById("numberList").PreviousElementSibling)

        5: nextElementSibling - returns the element immediately following the specified element, in the same tree level
            - Example:
                consol.log(document.getElementById("numberList").nextElementSiblingElementChild)

8.10 Altering values (working with HTML content)

    Altering HTML content definition
        - The HTML Dom allows javaScript to change the content of html element.
         
